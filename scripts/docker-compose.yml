version: '3.7'

services:


  db:
#    image: postgres:16.1
    build:
      context: ./database/init
      dockerfile: Dockerfile
    command: postgres -c 'max_connections=2000'
    volumes:
      - ./database/data:/var/lib/postgresql/data
      #- ./database/init/tests.sql:/docker-entrypoint-initdb.d/tests.sql
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: ekspg
      POSTGRES_USER: eku01
      POSTGRES_PASSWORD: tnG4-gr6D
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U eku01 -d ekspg | grep -w 'accepting connections' || exit 1"]
      interval: 10s
      timeout: 3s
      retries: 10
      start_period: 5s
    logging:
      driver: "json-file"
      options:
        max-size: "50m"


  grafana:
    build: 'config/grafana'
    network_mode: host
    container_name: grafana-container
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin

  prometheus:
    image: prom/prometheus
    network_mode: host
    container_name: prometheus-container
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus:/etc/prometheus/
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml
#    restart: always

#  actionlog:
#    image: app/action_log
#    build:
#      context: backend
#      dockerfile: ../ActionLog/Dockerfile
#    network_mode: host
#    container_name: action-log-container
#    ports:
#      - "8081:8081"


#  rabbitmq:
#    image: rabbitmq:3-management
#    ports:
#      - "5672:5672"
#      - "15672:15672"
#    logging:
#      driver: "json-file"
#      options:
#        max-size: "50m"

networks:
  monitoring: